/*
	A Scheduling Algorithm decider FIS (fuzzy inference system)
    Calculates priority degree based on 'battery level' and 'number of connectible devices'
*/

FUNCTION_BLOCK schedule_controller	// Block definition (there may be more than one block per file)

VAR_INPUT				// Define input variables
	battery_level : REAL;
	devices_number : REAL;
END_VAR

VAR_OUTPUT				// Define output variable
	priority_degree : REAL;
END_VAR

FUZZIFY battery_level			// Fuzzify input variable 'battery_level': {'low', 'average' , 'high'}
	TERM low := (0, 1) (20, 1) (40, 0);
	TERM average := (20, 0) (50, 1) (80, 0);
	TERM high := (60, 0) (80, 1) (100, 1);
END_FUZZIFY

FUZZIFY devices_number			// Fuzzify input variable 'devices_number': { 'few', 'medium' , 'many' }
	TERM few := (0, 1) (2, 1) (4, 0);
    TERM medium := (2, 0) (5, 1) (8, 0);
    TERM many := (6, 0) (8, 1) (10, 1);
END_FUZZIFY

DEFUZZIFY priority_degree			// Defzzzify output variable 'priority_degree' : {'lowest','low','below_average','above_average', 'high', 'highest' }
	TERM lowest := (0, 0) (1, 1) (2, 0);
	TERM low := (1, 0) (2, 1) (3, 0);
	TERM below_average := (2, 0) (3, 1) (4, 0);
	TERM above_average := (3, 0) (4, 1) (5, 0);
	TERM high := (4, 0) (5, 1) (6, 0);
	TERM highest := (5, 0) (6, 1) (7, 0);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method

	RULE 1 : IF battery_level IS high AND devices_number IS few THEN priority_degree IS highest;
	RULE 2 : IF battery_level IS high AND devices_number IS medium THEN priority_degree IS above_average;
	RULE 3 : IF battery_level IS high AND devices_number IS many THEN priority_degree IS high;
	RULE 4 : IF battery_level IS average AND devices_number IS few THEN priority_degree IS high;
	RULE 5 : IF battery_level IS average AND devices_number IS medium THEN priority_degree IS below_average;
	RULE 6 : IF battery_level IS average AND devices_number IS many THEN priority_degree IS low;
	RULE 7 : IF battery_level IS low AND devices_number IS few THEN priority_degree IS low;
	RULE 8 : IF battery_level IS low AND devices_number IS medium THEN priority_degree IS below_average;
	RULE 9 : IF battery_level IS low AND devices_number IS many THEN priority_degree IS lowest;
END_RULEBLOCK

END_FUNCTION_BLOCK
